syntax = "proto3";

package event;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service Calendar{
    rpc GetEvent(GetEventListRequest) returnes (GetListResponse);
    rpc AddEvent(AddEventRequest) returnes (AddEventResponse);
    rpc UpdateEvent(UpdateEventRequest) returnes (UpdateEventResponse);
    rpc DeleteEvent(DeleteEventRequest) returnes (DeleteEventResponse);
}

message ProtoEvent {
    string id = 1;
    string title = 2;
    google.protobuf.Timestamp start_time = 3;
    google.protobuf.Duration duration = 4;
    string description = 5;
    string user_id = 6;
    google.protobuf.Duration reminder = 7;
}

type GetEventListPeriod string

const (
    GetEventListPeriod_UNSPECIFIED GetEventListPeriod = "unspecified";
	GetEventListPeriod_DAY GetEventListPeriod = "day";
	GetEventListPeriod_WEEK  GetEventListPeriod = "week";
	GetEventListPeriod_MONTH GetEventListPeriod = "month";
)

message GetEventListRequest {
    GetEventListPeriod period = 1;
    google.protobuf.Timestamp start_time = 2; 
}

type GetEventListStatus string

const (
	GetEventListStatus_LISTDAY   GetEventListStatus = "Day event list successfully retrieved"
	GetEventListStatus_LISTWEEK  GetEventListStatus = "Week event list successfully retrieved"
	GetEventListStatus_LISTMONTH GetEventListStatus = "Month event list successfully retrieved"
)

message GetListResponse {
	GetEventListStatus status = 1;
	repeated ProtoEvent events = 2;
}

type AddEventRequest ProtoEvent

type AddEventStatus string

const (
	AddEventStatus_ADD AddEventStatus = "Event added successfully"
)

message AddEventResponse {
	AddEventStatus status = 1;
	ProtoEvent event  = 2;
}

type UpdateEventRequest ProtoEvent

type UpdateEventStatus string

const (
	UpdateEventStatus_UPDATE UpdateEventStatus = "Event updated successfully"
)

message UpdateEventResponse {
	UpdateEventStatus status = 1;
}

message DeleteEventRequest {
	string id = 1;
}

type DeleteEventStatus string

const (
	Delete DeleteEventStatus = "Event deleted successfully"
)

type DeleteEventResponse struct {
	Status DeleteEventStatus `json:"status" binding:"required"`
}
