apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scheduler.fullname" . }}
spec:
  replicas: {{ .Values.scheduler.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "scheduler.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "scheduler.fullname" . }}
    spec:
      containers:
        - name: scheduler
          image: "{{ .Values.scheduler.image.repository }}:{{ .Values.scheduler.image.tag }}"
          env:
            - name: DB_HOST
              value: "{{ .Values.scheduler.env.db.host }}"
            - name: DB_USER
              value: "{{ .Values.scheduler.env.db.user }}"
            - name: DB_PASSWORD
              value: "{{ .Values.scheduler.env.db.password }}"
            - name: RMQ_HOST
              value: "{{ .Values.scheduler.env.rmq.host }}"
            - name: RMQ_USER
              value: "{{ .Values.scheduler.env.rmq.user }}"
            - name: RMQ_PASSWORD
              value: "{{ .Values.scheduler.env.rmq.password }}"          
          livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 30
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 3
          livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 30
            httpGet:
              path: /health
              port: 8080
          resources:
            {{- toYaml .Values.scheduler.resources }}  
