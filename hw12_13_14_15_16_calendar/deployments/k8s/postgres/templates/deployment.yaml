apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres-db.fullname" . }}
spec:
  replicas: {{ .Values.postgresDb.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "postgres-db.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "postgres-db.fullname" . }}
    spec:
      containers:
        - name: postgres-db
          image: "{{ .Values.postgresDb.image.repository }}:{{ .Values.postgresDb.image.tag }}"
          ports:
            - containerPort: 5432
          env:
            - name: APP_VERSION
              value: "{{ .Values.postgresDb.image.version }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgresDb.env.db.database }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgresDb.env.db.user }}"  
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresDb.env.db.password }}"
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata  
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "psql -h localhost -U $DB_USER -d $POSTGRES_DB -c 'SELECT 1;'"
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -p
                - "5432"
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.postgresDb.resources }}  
volumes:
  - name: postgres-data
    persistentVolumeClaim:
      claimName: postgres-pvc                    